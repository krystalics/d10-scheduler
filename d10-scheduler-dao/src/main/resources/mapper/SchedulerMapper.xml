<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.krystalics.d10.scheduler.dao.mapper.SchedulerMapper">

    <select id="checkUpInstancesAreSuccess" resultType="java.lang.Integer">
        select count(1)
        from instance_rely ir
                 join version v
                      on ir.up_task_id = v.task_id and ir.up_version_no = v.version_no
                 join instance i
                      on v.last_instance_id = i.instance_id
        where ir.instance_id = #{instanceId}
          and i.state != 6;
    </select>

    <select id="routingSchedulingInstances" resultType="com.github.krystalics.d10.scheduler.common.constant.VersionInstance">
        select instance_id       as instanceId,
               t.task_id         as taskId,
               v.version_id      as versionId,
               i.state           as state,
               t.queue_name      as queueName,
               t.cpu_avg         as cpuAvg,
               t.memory_avg      as memoryAvg,
               start_time_theory as startTimeTheory,
               concurrency       as concurrency

        from task as t
                 join version as v
                      on t.task_id = v.task_id
                 join instance i
                      on v.last_instance_id = i.instance_id

        where i.task_id between #{left} and #{right}
        <![CDATA[
          and i.state < 5
          and t.state = 2
          and i.ctime between #{startDate} and NOW()
        ]]>
    </select>

    <update id="updateInstance">
        UPDATE instance
        SET
        <if test="state != null and state != ''">
            state = #{state},
        </if>

        <if test="queueName != null and queueName != ''">
            queue_name = #{queueName},
        </if>
        <if test="runStartTime != null and runStartTime != ''">
            run_start_time = #{runStartTime},
        </if>
        <if test="node != null and node != ''">
            node = #{node},
        </if>
        WHERE instance_id = #{instanceId}
    </update>


<!--  由于直接获取jobConf 数据量比较大，就不和其他sql一起复用了  -->
    <select id="redispatchSchedulingInstances" resultType="com.github.krystalics.d10.scheduler.common.constant.VersionInstance">
        select instance_id       as instanceId,
               t.task_id         as taskId,
               v.version_no      as versionNo,
               v.version_id      as versionId,
               t.type            as type,
               start_time_theory as startTimeTheory,
               i.job_conf        as jobConf,
               i.remote_id       as remoteId,
               i.state           as state,
               t.queue_name      as queueName,
               i.queue_in_yarn   as queueInYarn,
               t.cpu_avg         as cpuAvg,
               t.memory_avg      as memoryAvg
        from task as t
                 join version as v
                      on t.task_id = v.task_id
                 join instance i
                      on v.last_instance_id = i.instance_id

        where i.task_id between #{left} and #{right}
        <![CDATA[
          and i.state = 9
          and t.state = 2
          and i.ctime between #{startDate} and NOW()
        ]]>
    </select>


</mapper>
