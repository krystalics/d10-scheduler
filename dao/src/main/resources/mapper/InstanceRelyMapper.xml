<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.krystalics.d10.scheduler.dao.mapper.VersionMapper">
    <sql id="table">
        version
    </sql>

    <sql id="fields">
        task_id          as taskId,
        task_name        as taskName,
        type             as type,
        frequency        as frequency,
        schedule_type    as scheduleType,
        concurrency      as concurrency,
        crontab          as crontab,
        owner_mail_prefix       as ownerMail,
        creator_mail_prefix     as creatorMail,
        job_conf          as jobConf,
        retry_times      as retryTimes,
        state            as state,
        note             as note,
        priority         as priority,
        ctime            as ctime,
        mtime            as mtime
    </sql>

    <sql id="where_sql">
        <where>
            <if test="taskName != null and taskName != ''">
                task_name like concat('%', #{taskName}, '%')
            </if>

            <if test="ownerMailLike != null and ownerMailLike != ''">
                and owner_mail_prefix like concat('%', #{ownerMailLike}, '%')
            </if>

        </where>
    </sql>


    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into
        <include refid="table"/>(
        task_id
        task_name
        type
        frequency
        schedule_type
        concurrency
        crontab
        owner_mail_prefix,
        creator_mail_prefix,
        jobConf
        retry_times
        state
        note
        priority)
        value(
        #{taskId},
        #{taskName},
        #{type},
        #{frequency},
        #{scheduleType},
        #{concurrency},
        #{crontab},
        #{ownerMail},
        #{creatorMail},
        #{jobConf},
        #{retryTimes},
        #{state},
        #{note},
        #{priority})
    </insert>

    <select id="list" resultType="com.github.krystalics.d10.scheduler.dao.entity.Version">
        select
        <include refid="fields"/>
        from
        <include refid="table"/>
        <include refid="where_sql"/>
        <if test="orderByOperation != null">
            <foreach collection="orderByOperation.itemOperators" item="opr" separator="," open="order by ">
                ${opr.column} ${opr.operator}
            </foreach>
        </if>
        <if test="page != null">
            limit #{page.offset},#{page.limit}
        </if>
    </select>

    <select id="count" resultType="int">
        select count(*) from
        <include refid="table"/>
        <include refid="where_sql"/>
    </select>


    <update id="update">
        update
        <include refid="table"/>
        <set>
            <if test="state != null and state != ''">
                state = #{state},
            </if>
        </set>
        <include refid="where_sql"/>
    </update>

    <select id="getById" resultType="com.github.krystalics.d10.scheduler.dao.entity.Version">
        select
        <include refid="fields"/>
        from
        <include refid="table"/>
        <include refid="where_sql"/>
    </select>
</mapper>
